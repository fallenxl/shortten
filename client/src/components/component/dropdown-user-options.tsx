/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/vkz3f0B6tS4
 */
import { Button } from "@/components/ui/button";
import {
  DropdownMenuTrigger,
  DropdownMenuSeparator,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuContent,
  DropdownMenu,
} from "@/components/ui/dropdown-menu";
import { AvatarImage, AvatarFallback, Avatar } from "@/components/ui/avatar";
import { useSelector } from "react-redux";
import { IAppStore } from "@/interfaces";
import { ChevronDown, Link2, LogOutIcon } from "lucide-react";
import { logout } from "@/services";
import Link from "next/link";

export function DropdownUserOptions() {
  const {data:user} = useSelector((state: IAppStore) => state.user);
  return (
    <DropdownMenu>
      <Avatar className="mx-auto w-8 h-8">
        <AvatarImage alt="user avatar" src={user?.avatar} />
        <AvatarFallback>{user?.name?.charAt(0)}</AvatarFallback>
      </Avatar>
      <DropdownMenuTrigger asChild>
        <Button className="h-8 w-8 rounded-full  " size="icon" variant="ghost">
          <ChevronDown className="h-4 w-4" />
        </Button>
      </DropdownMenuTrigger>
      <DropdownMenuContent className="mr-2 py-2 px-2">
        <div className="px-3 py-4 grid items-center gap-2 ">
          <div className="text-sm font-medium text-center">{user?.name}</div>
          <div className="text-xs text-gray-500">{user?.email}</div>
        </div>
        <DropdownMenuSeparator />
        <DropdownMenuItem>
          <Link href="/my-links" className="flex items-center">
            <Link2 className="h-4 w-4 mr-2" />
            My Links
          </Link>
        </DropdownMenuItem>
        <DropdownMenuItem onClick={logout}>
          <LogOutIcon className="h-4 w-4 mr-2" />
          Logout
        </DropdownMenuItem>
      </DropdownMenuContent>
    </DropdownMenu>
  );
}

function UserIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2" />
      <circle cx="12" cy="7" r="4" />
    </svg>
  );
}
